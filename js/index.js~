$(document).ready(function() {
	document.addEventListener('deviceready', onDeviceReady,false);
	
});

function onDeviceReady() {
	console.log('Device Ready');
}

$(document).on('click', '#vidlist li', function() {
	showVideo($(this).attr('videoId'));
});

$(document).bind("pageinit", function() {
	var channel = 'UC-0QtxHQwuQSHebab3LHAug';
	console.log('Channel: ' + channel);
	getPlaylist(channel);
});

$(document).on('click', '#racetrack', function() {
	showRaceTrack();
});

$(document).on('click', '#startTracking', function() {
	startTracking();
});

$(document).on('click', '#stopTracking', function() {
	stopTracking();
});


function getPlaylist(channel) {
	$('#vidlist').html('');
	$.get(
		"https://www.googleapis.com/youtube/v3/search",
		{
			part: 'snippet',
			channelId: channel,
			key: 'AIzaSyD4tJv6Pr1B3LIgS0zxincojbBUW4bf6Kk', 
		},
		function(data){
			var output;
			var notSet = true;
			for (var i = 0; i < data.items.length; i++) {
				console.log(data.items[i]);
				videoId = data.items[i].id.videoId;
				title = data.items[i].snippet.title;
				thumb = data.items[i].snippet.thumbnails.default.url;
				if ( videoId ) {
					console.log('VideoId: ' + videoId);
					$('#vidlist').append('<li videoId="'+videoId+'"><div><img src="'+thumb+'" width="80" height="50"></div><h3>'+title+'</h3></li>');
					$('#vidlist:visible').listview('refresh');
					if ( notSet ) {
						var aprLastUploaded = localStorage.getItem('aprLastUploaded');
						if ( aprLastUploaded == null || aprLastUploaded == '') {
							console.log('Setting aprLastUploaded to ' + videoId);
							localStorage.setItem('aprLastUploaded', videoId);
						}
					}
				}
			}
			
		}
	);
}


function showVideo(id) {
	$('#videologo').hide();
	var output = '<iframe width="100%" height="250" src="https://www.youtube.com/embed/' + id + '" frameborder="0" allowfullscreen></iframe>';
	console.log('Showing Video ' + output);
	$('#showVideo').html(output);
}

function showRaceTrack() {
    	console.log("In showRaceTrack");
    	var defaultLatLng = new google.maps.LatLng(12.919710, 77.688186);  // Default APR Project office
    	if ( navigator.geolocation ) {
        	function success(pos) {
            	// Location found, show map with these coordinates
            	drawMap(new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude));
        	}
        	function fail(error) {
            		drawMap(defaultLatLng);  // Failed to find location, show default map
        	}
        	// Find the users current position.  Cache the location for 5 minutes, timeout after 6 seconds
        	navigator.geolocation.getCurrentPosition(success, fail, {maximumAge: 500000, enableHighAccuracy:true, timeout: 6000});
    	} else {
        	drawMap(defaultLatLng);  // No geolocation support, show default map
    	}
    	function drawMap(latlng) {
        	var myOptions = {
            	zoom: 15,
            	center: latlng,
            	mapTypeId: google.maps.MapTypeId.ROADMAP
        	};
        	var map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);
        	// Add an overlay to the map of current lat/lng
        	var marker = new google.maps.Marker({
            	position: latlng,
            	map: map,
            	title: "Greetings!"
        	});
     	}
        /*
	$("#map").googleMap({
		zoom: 15, // Initial zoom level (optional)
		coords: [12.9204273, 77.6855423], // Map center (optional)
		type: "ROADMAP" // Map type (optional)
	});
	// Marker 1
	$("#map").addMarker({
		coords: [12.9204273, 77.6855423],
		title: 'Start Point'

	});*/
}

var track_id = '';      // Name/ID of the exercise
var watch_id = null;    // ID of the geolocation
var tracking_data = []; // Array containing GPS position objects
 
function startTracking() {
    console.log('In startTracking');    
    // Start tracking the User
    watch_id = navigator.geolocation.watchPosition(
     
    // Success
    function(position){
       tracking_data.push(position);
       console.log('Watch_Id: ' + watch_id);
       console.log(position);
    },
         
    // Error
    function(error){
       console.log(error);
    },
         
    // Settings
    { frequency: 3000, enableHighAccuracy: true }
);
    $('#startTracking').attr('disabled', true);
    $('#stopTracking').attr('disabled', false);
}

function stopTracking() {
	console.log('In stopTracking ' + watch_id);    
	navigator.geolocation.clearWatch(watch_id);
        $('#startTracking').attr('disabled', false);

}
						
